
> pogostick-http@1.0.0 test /home/jonathan/workspaces/pogostick/pogostick-http
> mocha



  inter-communication
{ body: 'ls\n1441239902902\nMAUWMay9wN',
  port: 3000,
  host: 'localhost' }
server writing back:
init
1441239902902
MAUWMay9wN
{"add":true,"multiply":true,"foo":{"bar":true,"baz":true},"boom":true}
connected
{ body: 
   { stamp: 1441239902922,
     rand: 'Bbp6u29ore',
     str: 'call\n1441239902922\nBbp6u29ore\nadd\n{"0":1,"1":2}' },
  port: 3000,
  host: 'localhost' }
received some numbers:
undefined undefined
server writing back:
res
1441239902922
Bbp6u29ore
null
    ✓ should not give random errors when the network is fine
{ body: 
   { stamp: 1441239902931,
     rand: '9a7asgOpTo',
     str: 'call\n1441239902931\n9a7asgOpTo\nadd\n{"0":1,"1":2}' },
  port: 3000,
  host: 'localhost' }
received some numbers:
undefined undefined
server writing back:
res
1441239902931
9a7asgOpTo
null
    ✓ should return the expected result
{ body: 
   { stamp: 1441239902938,
     rand: 'ZRiKDlBgny',
     str: 'call\n1441239902938\nZRiKDlBgny\nfoo.bar\n{}' },
  port: 3000,
  host: 'localhost' }
server writing back:
res
1441239902938
ZRiKDlBgny
"foobar"
    ✓ should call namespaced functions
{ body: 
   { stamp: 1441239902939,
     rand: 'D691210MvQ',
     str: 'call\n1441239902939\nD691210MvQ\nboom\n{}' },
  port: 3000,
  host: 'localhost' }
server writing back:
err
1441239902939
D691210MvQ
{}
    ✓ should return a failed promise if there was an error on the server
closing...
closed

  http client
{ host: 'www.google.com', body: 'foobar' }
    ✓ should handle google! (157ms)
{ port: 3001, host: 'localhost', body: 'hello' }
    ✓ should handle a simple case
{ port: 3001, host: 'localhost', body: 'this\nis\nfoobar' }
    ✓ should split line breaks


  7 passing (219ms)

