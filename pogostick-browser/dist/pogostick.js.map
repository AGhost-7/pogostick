{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/home/jonathan/workspaces/pogostick/pogostick-browser/index.js",
    "/home/jonathan/workspaces/pogostick/pogostick-proto/index.js",
    "/home/jonathan/workspaces/pogostick/pogostick-proto/lib/client.js",
    "/home/jonathan/workspaces/pogostick/pogostick-proto/lib/exit.js",
    "/home/jonathan/workspaces/pogostick/pogostick-proto/lib/serializer.js",
    "/home/jonathan/workspaces/pogostick/pogostick-proto/lib/server.js",
    "/home/jonathan/workspaces/pogostick/pogostick-proto/node_modules/extend/index.js",
    "/home/jonathan/workspaces/pogostick/pogostick-proto/node_modules/mk-fn/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var pogo = require('pogostick-proto');\n\nvar requestFactory = function(options, cb) {\n\ttry {\n\t\tvar req = new XMLHttpRequest();\n\t\t\n\t\tvar protocol = options.protocol || 'http';\n\t\tvar host = options.host || 'localhost';\n\t\tvar port = options.port || (protocol === 'https' ? 443 : 80);\n\t\tvar path = options.path || '/';\n\t\tvar url = protocol + '://' + host + ':' + port + path;\n\t\tvar headers = options.headers || {};\n\t\tvar method = options.method || 'POST';\n\t\t\n\t\t// Needs to be opened to write headers to.\n\t\treq.open(method, url, true);\n\n\t\t// apply the headers to the request...\n\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\tObject.keys(headers).forEach(function(key) {\n\t\t\treq.setRequestHeader(key, headers[key]);\n\t\t});\n\n\t\treq.onload = function() {\n\t\t\tif(req.status < 300 && req.status >= 200) {\n\t\t\t\tcb(null, req.responseText.split('\\n'));\n\t\t\t} else {\n\t\t\t\tcb(new Error('Server responded with a ' + \n\t\t\t\t\t\treq.status + ' with message: ' + req.responseText));\n\t\t\t}\n\t\t};\n\n\t\treq.onerror = function(err){\n\t\t\tcb(err);\n\t\t}; \n\t\t\n\t\tif(options.body.str) req.send(options.body.str);\n\t\telse req.send(options.body);\n\n\t} catch (err) {\n\t\tcb(err);\n\t}\n\n};\n\n/* There is not way for to create an ajax server... Might need to use an different api.\n * For now, this is only a client function. \n */\nmodule.exports = function(promiseFactory, opts) {\n\treturn pogo.client(promiseFactory, requestFactory, opts);\n};\n",
    "'use strict';\n\nvar Exit = require('./lib/exit');\n\nmodule.exports = {\n\tclient: require('./lib/client'),\n\tserver: require('./lib/server'),\n\tExit: Exit,\n\texit: Exit.create\n};\n",
    "\n'use strict';\n\nvar serializer = require('./serializer');\nvar extend = require('extend');\nvar mkFn = require('mk-fn');\n\n/* This is what is used to travel through the listen sent by the server. \n * TODO: Optimize to a while loop or something. Not really important atm since\n * its only executed on the initial connection.\n */\nfunction parseField(\n\t\tpromiseFactory, \n\t\trequestFactory,\n\t\toptions,\n\t\tevents,\n\t \tstate,\n\t\tpath,\n\t\tval) {\n\t// if its a number, then according to the protocol we have a function.\n\tif(typeof val === 'number') {\n\t\tvar proc = mkRemoteProc(\n\t\t\tpromiseFactory, \n\t\t\trequestFactory, \n\t\t\toptions,\n\t\t\tevents,\n\t\t\tstate, \n\t\t\tpath);\n\t\treturn mkFn(val, proc);\n\t} else if(Array.isArray(val)) {\n\t\tvar arr = [];\n\t\tfor(var i = 0; i < val.length; i++) {\n\t\t\tvar parsed = parseField(\n\t\t\t\t\tpromiseFactory, \n\t\t\t\t\trequestFactory, \n\t\t\t\t\toptions,\n\t\t\t\t\tevents,\n\t\t\t\t\tstate,\n\t\t\t\t\tpath + '.' + i,\n\t\t\t\t\tval[i]);\n\t\t\tarr.push(parsed);\n\t\t}\n\t\treturn arr;\n\t} else if(typeof val === 'object') {\n\t\tvar res = {};\n\t\tfor(var key in val) {\n\t\t\tif(val.hasOwnProperty(key)) {\n\t\t\t\tvar parsedObj = parseField(\n\t\t\t\t\t\tpromiseFactory,\n\t\t\t\t\t\trequestFactory,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tevents,\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\tpath + '.' + key,\n\t\t\t\t\t\tval[key]);\n\n\t\t\t\tres[key] = parsedObj;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n}\n\nfunction mkRemoteProc(\n\t\tpromiseFactory, \n\t\trequestFactory, \n\t\toptions, \n\t\tevents, \n\t\tstate, \n\t\tpath) {\n\treturn function() {\n\t\tif(state.isEnded) {\n\t\t\treturn promiseFactory(function(resolve, reject) {\n\t\t\t\treturn reject(new Error('Connection is closed'));\n\t\t\t});\n\t\t}\n\n\t\t// Lazy evaluation is used to handle the caching to keep things optimal.\n\t\t// Convert it to a string once, and since the object is to some extent \n\t\t// immutable, I don't need to convert it after that for this particular\n\t\t// object instance.\n\t\tif(this._implicitsCache === undefined) {\n\t\t\tthis._implicitsCache = JSON.stringify(this._implicits);\n\t\t}\n\n\t\tvar implicits = this._implicitsCache;\n\t\t// the procol requires this to be an array.\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\treturn promiseFactory(function(resolve, reject) {\n\t\t\tvar body = serializer.call(path, args, implicits);\n\t\t\tvar opts = extend({ body: body }, options);\n\t\t\trequestFactory(opts, function(err, msg) {\n\t\t\t\tif(err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\tif(events.broadcastError) events.error(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch(msg[0]) {\n\t\t\t\t\tcase 'exit':\n\t\t\t\t\t\t// all functions will now return a rejected promise.\n\t\t\t\t\t\tstate.isEnded = true;\n\t\t\t\t\t\tvar exitReason;\n\t\t\t\t\t\tif(msg[3] !== undefined) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\texitReason = JSON.parse(msg[3]);\n\t\t\t\t\t\t\t} catch(err) {}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tevents.exit(msg[1], msg[2], exitReason);\n\t\t\t\t\t\tevents.end(msg[1], msg[2], exitReason);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'err':\n\t\t\t\t\t\tvar res;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tres = new Error(JSON.parse(msg[3]));\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tres = err;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treject(res);\n\t\t\t\t\t\tif(events.broadcastError) events.error(res);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'res':\n\t\t\t\t\t\tresolve(JSON.parse(msg[3]));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ????\n\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n}\n\n/* Creates a new instance with the exact same remote procedures but with a \n * change in the implicit object.\n */ \nfunction $implicitly(key, value) {\n\tvar impl = {};\n\tfor(var k in this._implicits) {\n\t\timpl[k] = this._implicits;\n\t}\n\timpl[key] = value;\n\treturn new this.constructor(impl);\n}\n\n/* Generates a class from the procedure listing call to the server which will \n * be our remote.\n */ \nfunction createRemoteClass(promiseFactory, requestFactory, listing, options) {\n\t// At this stage, I don't have much of a choice to add mutable state. If\n\t// the remote has been closed at the protocol-level, they need to change \n\t// of state to alter their behaviour. State in this case will be shared\n\t// accross all remote instances which have the same connection, even if\n\t// they have different implicits.\n\tvar state = {\n\t\tisEnded: false\n\t};\n\n\tvar on = options.on || {};\n\tvar events = {\n\t\tend: on.end,\n\t\terror: on.error,\n\t\tbroadcastError: !!on.error,\n\t\texit: on.exit\n\t};\n\n\tvar Remote = function(impl) {\n\t\tthis._implicits = impl;\n\t};\n\n\tvar RemoteProto = Object.create(null);\n\tfor(var key in listing) {\n\t\tRemoteProto[key] = parseField(\n\t\t\t\tpromiseFactory,\n\t\t\t\trequestFactory,\n\t\t\t\toptions,\n\t\t\t\tevents,\n\t\t\t\tstate,\n\t\t\t\tkey,\n\t\t\t\tlisting[key]);\n\t}\n\t\n\tRemote.prototype = RemoteProto;\n\tRemote.prototype.$implicitly = $implicitly;\n\t\n\t// I need to externalize the `end` handler since in some situation the end\n\t// will be protocol specific, e.g., tcp streams (persistent connections).\n\tRemote.prototype.$end = function() {\n\t\tstate.isEnded = true;\n\t\tif(typeof events.end === 'function') {\n\t\t\tevents.end.apply(this, arguments);\n\t\t}\n\t};\n\n\tRemote.prototype.constructor = Remote;\n\n\treturn Remote;\n}\n\n/* Handles any case where there was an error fetching the procedure listing. \n */\nfunction initError(msg) {\n\tvar errMsg;\n\ttry {\n\t\terrMsg = JSON.parse(msg[3]);\n\t} catch(err) {\n\t\treturn new Error('Error requesting procedure listing');\n\t}\n\treturn new Error(errMsg);\n}\n\n/* To make this agnostic, I need to use a function which will handle the \n * the request logic, abstracting the transport completely from this module.\n *\n * promiseFactory: function(resolver: function(resolve, reject)): Promise\n *\n * requestFactory: function(options, cb: function(err, msg: Array<String>)): void\n *\n */\nmodule.exports = function(promiseFactory, requestFactory, opts) {\n\t// clone this just to be on the safe side.\n\tvar heldOptions = opts ? extend({}, opts) : {};\n\t// return a client factory\n\treturn function(opts, cb) {\n\n\t\t// this will be the options object used for all requests for the client \n\t\t// instance, in part determined by the factory.\n\t\tvar defOptions = extend(extend({}, heldOptions), opts);\n\n\t\t//var events = defOptions.on;\n\n\t\t// start by asking the server to list its procedure which we can use.\n\t\tvar initOpts = extend({ body: serializer.ls() }, defOptions);\n\t\trequestFactory(initOpts, function(err, msg) {\n\t\t\t// the underlying network error should be propagated as it will be the \n\t\t\t// more useful than a cryptic, library-specific error. E.g., \n\t\t\t// ERRCONREFUSED will be more useful to know.\n\t\t\tif(err) return cb(err);\n\t\t\t\n\t\t\t// The protocol permits returning an `err` or `exit` response for the\n\t\t\t// `ls` call.\n\t\t\tif(msg[0] === 'err' || msg[0] === 'exit') {\n\t\t\t\treturn cb(initError(msg));\n\t\t\t}\n\n\t\t\t// While it should not happen, it is possible for a parse error. Since\n\t\t\t// this library aims to never throw anything, it should handle parse\n\t\t\t// errors.\n\t\t\tvar listing;\n\t\t\ttry {\n\t\t\t\tlisting = JSON.parse(msg[3]);\n\t\t\t} catch(er) {\n\t\t\t\treturn cb(new Error('JSON parser error: ' + er.message));\n\t\t\t}\n\t\t\t\n\t\t\t// Since implicits create a new remote every time, I should optimize\n\t\t\t// object creation to limit the overhead. Instead of generating an entire\n\t\t\t// remote every time, the remote procedure functions are placed on a \n\t\t\t// prototype which is created on the fly at the initial connection.\n\t\t\tvar Remote = createRemoteClass(\n\t\t\t\t\tpromiseFactory, \n\t\t\t\t\trequestFactory, \n\t\t\t\t\tlisting, \n\t\t\t\t\tdefOptions);\n\n\t\t\tcb(null, new Remote({}));\t\n\t\t});\n\t};\n};\n",
    "function Exit(msg) {\n\tthis.message = msg || '';\n}\n\nExit.create = function(msg) {\n\treturn new Exit(msg);\n};\n\nmodule.exports = Exit;\n",
    "'use strict';\n\nvar cleanInitField = function(field){\n\tif(typeof field === 'function') {\n\t\treturn field.length;\n\t} else if (typeof field === 'object') {\n\t\tif(Array.isArray(field)) {\n\t\t\treturn field.map(cleanInitField);\n\t\t} else {\n\t\t\tvar res = {};\n\t\t\tfor(var key in field) {\n\t\t\t\tif(field.hasOwnProperty(key)) {\n\t\t\t\t\tres[key] = cleanInitField(field[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}\n};\n\nvar cleanProcObj = function(obj) {\n\tvar processed = {};\n\tfor(var key in obj) {\n\t\tif(obj.hasOwnProperty(key)) {\n\t\t\tprocessed[key] = cleanInitField(obj[key]);\n\t\t}\n\t}\n\treturn processed;\n};\n\nvar randString = (function() {\n\tvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\treturn function() {\n\t\tvar res = [];\n\t\tfor(var i = 0; i < 10;i++){\n\t\t\tvar at = Math.floor(Math.random() * chars.length);\n\t\t\tvar c = chars.charAt(at);\n\t\t\tres.push(c);\n\t\t}\n\t\treturn res.join('');\n\t};\n})();\n\nmodule.exports = {\n\n\t/* On initial connection, the client sends a request to receive the init\n\t * call from the server\n\t */\n \tls: function() {\n\t\treturn [\n\t\t\t'ls',\n\t\t\tDate.now(),\n\t\t\trandString()\n\t\t].join('\\n');\n\t},\t\n\n\n\t/* Server initially sends a listing of all available procedures.\n\t *\n\t * The procedure listing is a JSON object, where each field can be a container\n\t * or a \"true\".\n\t *\n\t * \"true\" maps to a remote function, while the containers are used as \n\t * namespaces to stay organized.\n\t *\n\t * Sender: Server; Receiver: Client\n\t */ \n\tinit: function(functions){\n\t\tvar cleaned = cleanProcObj(functions);\n\t\tvar body = JSON.stringify(cleaned);\n\n\t\treturn function(stamp, rand) {\n\t\t\treturn [\n\t\t\t\t'init', \n\t\t\t\tstamp,\n\t\t\t\trand,\n\t\t\t\tbody\t\t\n\t\t\t].join('\\n');\n\t\t};\n\t},\n\n\t/* Whenever a procedure is called by the API, the client send a \"call\" message\n\t * to the server.\n\t *\n\t * If the function is namespaced (by an array or object), the notation used to\n\t * denote mutiple keys is a dot, e.g. \"foo.bar\".\n\t *\n\t * In this case it returns a object containing the serialized payload, stamp, \n\t * and random string since the implementation for tls/tcp/websockets will need\n\t * this to manage the event processing.\n\t *\n\t * Sender: Client; Receiver: Server\n\t */ \n\tcall: function(path, args, implicits) {\n\t\tvar rand = randString();\n\t\tvar stamp = Date.now();\n\t\treturn {\n\t\t\tstamp: stamp,\n\t\t\trand: rand,\n\t\t\tstr: [\n\t\t\t\t'call',\n\t\t\t\tstamp,\n\t\t\t\trand,\n\t\t\t\tpath,\n\t\t\t\tJSON.stringify(args),\n\t\t\t\timplicits ? JSON.stringify(implicits) : ''\n\t\t\t].join('\\n')\n\t\t};\n\t},\n\n\t/* Response sent by the server.\n\t *\n\t * The stamp and randStr must be the ones that te client sent when calling the\n\t * procedure.\n\t *\n\t * Sender: Server; Receiver: Client\n\t */ \n\tres: function(stamp, randStr, res) {\n\t\treturn [\n\t\t\t'res',\n\t\t\tstamp,\n\t\t\trandStr,\n\t\t\tJSON.stringify(res)\n\t\t].join('\\n');\n\t},\n\n\t/* Whenever there is an error on the server where the client would probably \n\t * need to use a different code path, the server send the err message.\n\t *\n\t * Sender: Server; Receiver: Client\n\t */ \n\terr: function(stamp, randStr, res) {\n\t\treturn [\n\t\t\t'err',\n\t\t\tstamp,\n\t\t\trandStr,\n\t\t\tJSON.stringify(res)\n\t\t].join('\\n');\n\t},\n\t\n\t/* Server response or push message sent to close the connection \n\t *\n\t * The stamp and randStr are optional.\n\t *\n\t * Sender: Server; Receiver: Client\n\t */\n\texit: function(stamp, randStr, err) {\n\t\tif(arguments.length === 3) {\n\t\t\treturn [\n\t\t\t\t'err',\n\t\t\t\tstamp,\n\t\t\t\trandStr,\n\t\t\t\terr\n\t\t\t].join('\\n');\n\t\t} else {\n\t\t\treturn [\n\t\t\t\t'err',\n\t\t\t\t'',\n\t\t\t\t'',\n\t\t\t\tJSON.stringify(err)\n\t\t\t].join('\\n');\n\t\t}\n\t}\n};\n",
    "\n'use strict';\n\nvar extend = require('extend');\nvar serializer = require('./serializer');\n\nvar Exit = require('./exit');\n\nfunction processCall(procs, msg) {\n\t\n\tvar proc = procs;\n\tvar parts = msg[3].split('.');\n\tfor(var i = 0; i < parts.length; i++) {\n\t\tproc = proc[parts[i]];\n\t\tif(proc === undefined) return notExist(msg);\n\t}\n\n\tvar implicits, res;\n\ttry {\n\t\timplicits = msg[5] ? JSON.parse(msg[5]) : {};\n\t\tres = proc.apply(implicits, JSON.parse(msg[4]));\n\t} catch(err) {\n\t\treturn serializer.err(msg[1], msg[2], err.message);\n\t}\n\n\t// the value returned can either be a promise or regular value. \n\tif(typeof res.then === 'function') {\n\t\treturn res.then(function(res) {\n\t\t\tif(res instanceof Exit) {\n\t\t\t\treturn serializer.exit(msg[1], msg[2], res.message);\n\t\t\t} else {\n\t\t\t\treturn serializer.res(msg[1], msg[2], res);\n\t\t\t}\n\t\t\t\n\t\t}, function(err) {\n\t\t\t// I dont think it would make sense for the user to send the Exit object\n\t\t\t// as a rejected promise, so don't process it here.\n\t\t\treturn serializer.err(msg[1], msg[2], err);\n\t\t});\n\t} else if(res instanceof Exit) {\n\t\treturn serializer.exit(msg[1], msg[2], res.message);\n\t} else {\n\t\treturn serializer.res(msg[1], msg[2], res);\n\t}\n\n}\n\nfunction notExist(msg) {\n\tvar err = new Error('Procedure ' + msg[3] + ' does not exist');\n\treturn serializer.err(msg[1], msg[2], err);\n}\n\n/* Creates a server instance which will send its results. \n */\nmodule.exports = function(serverFactory, opts) {\n\tvar defOpts = extend({}, opts);\n\treturn function(procs, opts) {\n\t\tvar options = extend(extend({}, defOpts), opts);\n\t\t\n\t\tvar procsInit = serializer.init(procs);\n\t\t\n\t\tvar processRequest = function(msg) {\n\t\t\tswitch(msg[0]) {\n\t\t\t\tcase 'ls':\n\t\t\t\t\treturn procsInit(msg[1], msg[2]);\n\n\t\t\t\tcase 'call':\n\t\t\t\t\treturn processCall(procs, msg);\n\t\t\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\tvar err = { \n\t\t\t\t\t\tmessage: 'Could not process request.', \n\t\t\t\t\t\treceived: msg.join('\\n') \n\t\t\t\t\t};\n\t\t\t\t\treturn serializer.err(msg[1], msg[2], err);\n\t\t\t}\t\n\t\t};\n\t\treturn serverFactory(processRequest, options);\n\t};\n};\n\n\n\n",
    "'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n",
    "module.exports = function (length, func) {\n\tswitch(length) {\n\t\tcase 0: return function() { return func.apply(this, arguments); };\n\t\tcase 1: return function(a) { return func.apply(this, arguments); };\n\t\tcase 2: return function(a,b) { return func.apply(this, arguments); };\n\t\tcase 3: return function(a,b,c) { return func.apply(this, arguments); };\n\t\tcase 4: return function(a,b,c,d) { return func.apply(this, arguments); };\n\t\tcase 5: return function(a,b,c,d,e) { return func.apply(this, arguments); };\n\t\tcase 6: return function(a,b,c,d,e,f) { return func.apply(this, arguments); };\n\t\tcase 7: return function(a,b,c,d,e,f,g) { return func.apply(this, arguments); };\n\t\tcase 8: return function(a,b,c,d,e,f,g,h) { return func.apply(this, arguments); };\n\t\tcase 9: return function(a,b,c,d,e,f,g,h,i) { return func.apply(this, arguments); };\n\t\tcase 10: return function(a,b,c,d,e,f,g,h,i,j) { return func.apply(this, arguments); };\n\t\tcase 11: return function(a,b,c,d,e,f,g,h,i,j,k) { return func.apply(this, arguments); };\n\t\tcase 12: return function(a,b,c,d,e,f,g,h,i,j,k,l) { return func.apply(this, arguments); };\n\t\tcase 13: return function(a,b,c,d,e,f,g,h,i,j,k,l,m) { return func.apply(this, arguments); };\n\t\tcase 14: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n) { return func.apply(this, arguments); };\n\t\tcase 15: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) { return func.apply(this, arguments); };\n\t\tcase 16: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) { return func.apply(this, arguments); };\n\t\tcase 17: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) { return func.apply(this, arguments); };\n\t\tcase 18: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) { return func.apply(this, arguments); };\n\t\tcase 19: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) { return func.apply(this, arguments); };\n\t\tcase 20: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) { return func.apply(this, arguments); };\n\t\tcase 21: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u) { return func.apply(this, arguments); };\n\t\tcase 22: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v) { return func.apply(this, arguments); };\n\t\tcase 23: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w) { return func.apply(this, arguments); };\n\t\tcase 24: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x) { return func.apply(this, arguments); };\n\t\tcase 25: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y) { return func.apply(this, arguments); };\n\t\tcase 26: return function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z) { return func.apply(this, arguments); };\n\t\tdefault: throw 'Function length is not valid, mk-fn cannot create function';\n\t}\n};\n"
  ]
}